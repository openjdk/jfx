/*
 * Copyright (c) 2013, 2021, Oracle and/or its affiliates.
 * All rights reserved. Use is subject to license terms.
 *
 * This file is available and licensed under the following license:
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *  - Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  - Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the distribution.
 *  - Neither the name of Oracle Corporation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

apply plugin:'application'

def mainClassName = "ensemble.EnsembleApp"

def FileCollection apachecp = files(
   "./lib/lucene-core-7.7.3.jar",
   "./lib/lucene-grouping-7.7.3.jar",
   "./lib/lucene-queryparser-7.7.3.jar")

sourceSets {
    main {
        java {
            srcDirs 'src/app/java',
                    'src/generated/java',
                    'src/samples/java'
        }
        resources {
            srcDirs 'src/app/resources',
                    'src/generated/resources',
                    'src/samples/resources'
        }
        compileClasspath += apachecp
    }
}

jar {
    manifest.attributes("Main-Class": mainClassName)

    // add in the sample sources....
    from fileTree('src/samples/java')

    // Note: this would be the "gradle" way to add in the Lucene jars
    // BUT we run into total path length on Windows with the temp file in ./build
    //apachecp.each { from zipTree(it) }
    //exclude 'META-INF/*'
}

// Merge the Apache Lucene jars into our main jar.
jar.doLast() {
    ant.zip(destfile: jar.archivePath, update: true, duplicate: "preserve") {
        zipgroupfileset(dir: new File("./lib"), includes:"*.jar")
    }
}

