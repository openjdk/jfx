/*
 * Copyright (c) 2009, 2024, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

param sampler inputTex;

float4 paint(float2 texCoord)
{
    float4 UYVY = sample(inputTex, texCoord);

    // TODO: select Y based on whether pixel is even/odd (JDK-8091282)
    float Y = UYVY.g;
    // subtract 0.5 to put UV values in the range [-0.5, 0.5]
    float U = UYVY.r - 0.5;
    float V = UYVY.b - 0.5;

    float4 RGBA;
    RGBA.r = Y + (1.403 * V);
    RGBA.g = Y - (0.344 * U) - (0.714 * V);
    RGBA.b = Y + (1.770 * U);
    RGBA.a = 1.0;

    return RGBA;
}
